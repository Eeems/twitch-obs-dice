name: build
on:
  pull_request:
    branches:
      - master
    paths:
     - requirements.txt
     - '*.py'
     - github-make-executable.sh
     - Makefile
     - .github/workflows/main.yml
  push:
    branches:
      - master
    paths:
     - requirements.txt
     - '*.py'
     - github-make-executable.sh
     - Makefile
     - .github/workflows/main.yml
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build for ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the Git repository
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt
      - name: Build twitch-obs-dice
        shell: bash
        run: make executable
      - name: Upload executable
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: |
            dist/twitch-obs-dice
            dist/config.example.toml
          if-no-files-found: error
      - name: Upload executable
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: |
            dist/twitch-obs-dice.exe
            dist/config.example.toml
          if-no-files-found: error
  release:
    name: Release
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: write
    steps:
      - name: Set current date as env variable
        run: |
          echo "NAME=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV
          echo "TAG=$(date +%s)" >> $GITHUB_ENV
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Rename artifacts
        run: |
          ls artifacts | while read artifact; do
            pushd artifacts/${artifact}
            zip -r ../${artifact}.zip .
            popd
          done
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/*.zip"
          name: ${{ env.NAME }}
          tag: ${{ env.TAG }}
          commit: ${{ github.sha }}
          generateReleaseNotes: true
          makeLatest: true
